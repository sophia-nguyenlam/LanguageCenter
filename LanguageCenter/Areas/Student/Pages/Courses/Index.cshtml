@page
@model LanguageCenter.Areas.Student.Pages.Courses.IndexModel
@{
    ViewData["Title"] = "Courses";
    Layout = "~/Areas/Student/Pages/Shared/_Layout.cshtml"; 
}

<div class="container-fluid px-4 mt-4">


    <div id="debug-message" class="alert alert-info" style="display:none;">
        <strong>Debug:</strong> <span id="debug-text"></span>
    </div>

    <!-- Breadcrumb Navigation -->
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Student" asp-page="/Home">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Courses</li>
        </ol>
    </nav>

    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
        <h1 class="h3 fw-bold text-dark">Courses</h1>
    </div>

    <!-- Search Form -->
    <form method="get" class="row g-2 mb-3 align-items-center">
        <div class="col-md-6">
            <input type="text" name="SearchTerm" class="form-control" placeholder="Search by course name..." value="@Model.SearchTerm" />
        </div>
        <div class="col-md-3">
            <select name="LevelFilter" class="form-select">
                <option value="">All Levels</option>
                <option value="Beginner" selected="@(Model.LevelFilter == "Beginner")">Beginner</option>
                <option value="Intermediate" selected="@(Model.LevelFilter == "Intermediate")">Intermediate</option>
                <option value="Advanced" selected="@(Model.LevelFilter == "Advanced")">Advanced</option>
            </select>
        </div>
        <div class="col-md-auto">
            <button type="submit" class="btn btn-outline-secondary">
                <i class="bi bi-search"></i> Search
            </button>
        </div>
    </form>

    <p class="text-muted small mb-2">Courses: <strong>@Model.Courses.Count</strong></p>

    <div class="table-responsive bg-white shadow rounded p-3">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th scope="col">Course Name</th>
                    <th scope="col">Language</th>
                    <th scope="col">Level</th>
                    <th scope="col">Duration (weeks)</th>
                    <th scope="col">Tuition Fee</th>
                    <th scope="col" class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.Courses)
                {
                        <tr>
                            <td><strong>@course.Name</strong></td>
                            <td>@course.Language</td>
                            <td>
                                <span class="badge @(course.Level == "Beginner" ? "bg-success" : course.Level == "Intermediate" ? "bg-warning" : "bg-danger")">
                                    @course.Level
                                </span>
                            </td>
                            <td>@course.DurationInWeeks weeks</td>
                            <td><strong>@course.TuitionFee.ToString("C")</strong></td>
                            <td class="text-end">
                                <a asp-area="Student" href="/Student/Courses/Details/@course.Id" class="btn btn-sm btn-outline-primary me-1" title="View Details">
                                    <i class="bi bi-eye" ></i> View Details
                                </a>
                                <a asp-area="Student" href="/Student/Courses/Enroll/@course.Id"  class="btn btn-sm btn-success" title="Enroll in Course">
                                    <i class="bi bi-person-plus"></i> Enroll
                                </a>
                            </td>
                        </tr>
                }
            </tbody>
        </table>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Courses page loaded');
            
            // Log clicks on View Details buttons
            document.querySelectorAll('.btn-outline-primary').forEach(button => {
                button.addEventListener('click', (event) => {
                    console.log('View Details button clicked:', button.href);
                    // Do not call event.preventDefault() to allow navigation
                    const debugMessage = document.getElementById('debug-message');
                    const debugText = document.getElementById('debug-text');
                    if (debugMessage && debugText) {
                        debugMessage.style.display = 'block';
                        debugText.textContent = `Navigating to ${button.href}`;
                    }
                });
            });
        });
    </script>

    @if (Model.TotalPages > 1)
    {
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mt-3">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link" href="?Page=@i&SearchTerm=@Model.SearchTerm&LevelFilter=@Model.LevelFilter">@i</a>
                            </li>
                }
                </ul>
            </nav>
    }
</div>
